SigHash	modulegraphs.html#SigHash	modulegraphs: SigHash	
ModuleGraph	modulegraphs.html#ModuleGraph	modulegraphs: ModuleGraph	
TPassContext	modulegraphs.html#TPassContext	modulegraphs: TPassContext	
PPassContext	modulegraphs.html#PPassContext	modulegraphs: PPassContext	
TPassOpen	modulegraphs.html#TPassOpen	modulegraphs: TPassOpen	
TPassClose	modulegraphs.html#TPassClose	modulegraphs: TPassClose	
TPassProcess	modulegraphs.html#TPassProcess	modulegraphs: TPassProcess	
TPass	modulegraphs.html#TPass	modulegraphs: TPass	
`$`	modulegraphs.html#$,SigHash	modulegraphs: `$`(u: SigHash): string	
`==`	modulegraphs.html#==,SigHash,SigHash	modulegraphs: `==`(a, b: SigHash): bool	
hash	modulegraphs.html#hash,SigHash	modulegraphs: hash(u: SigHash): Hash	
hash	modulegraphs.html#hash,FileIndex	modulegraphs: hash(x: FileIndex): Hash	
onUse	modulegraphs.html#onUse.t,TLineInfo,PSym	modulegraphs: onUse(info: TLineInfo; s: PSym)	
onDef	modulegraphs.html#onDef.t,TLineInfo,PSym	modulegraphs: onDef(info: TLineInfo; s: PSym)	
onDefResolveForward	modulegraphs.html#onDefResolveForward.t,TLineInfo,PSym	modulegraphs: onDefResolveForward(info: TLineInfo; s: PSym)	
stopCompile	modulegraphs.html#stopCompile,ModuleGraph	modulegraphs: stopCompile(g: ModuleGraph): bool	
createMagic	modulegraphs.html#createMagic,ModuleGraph,string,TMagic	modulegraphs: createMagic(g: ModuleGraph; name: string; m: TMagic): PSym	
newModuleGraph	modulegraphs.html#newModuleGraph,IdentCache,ConfigRef	modulegraphs: newModuleGraph(cache: IdentCache; config: ConfigRef): ModuleGraph	
resetAllModules	modulegraphs.html#resetAllModules,ModuleGraph	modulegraphs: resetAllModules(g: ModuleGraph)	
getModule	modulegraphs.html#getModule,ModuleGraph,FileIndex	modulegraphs: getModule(g: ModuleGraph; fileIdx: FileIndex): PSym	
addDep	modulegraphs.html#addDep,ModuleGraph,PSym,FileIndex	modulegraphs: addDep(g: ModuleGraph; m: PSym; dep: FileIndex)	
addIncludeDep	modulegraphs.html#addIncludeDep,ModuleGraph,FileIndex,FileIndex	modulegraphs: addIncludeDep(g: ModuleGraph; module, includeFile: FileIndex)	
parentModule	modulegraphs.html#parentModule,ModuleGraph,FileIndex	modulegraphs: parentModule(g: ModuleGraph; fileIdx: FileIndex): FileIndex	
markDirty	modulegraphs.html#markDirty,ModuleGraph,FileIndex	modulegraphs: markDirty(g: ModuleGraph; fileIdx: FileIndex)	
markClientsDirty	modulegraphs.html#markClientsDirty,ModuleGraph,FileIndex	modulegraphs: markClientsDirty(g: ModuleGraph; fileIdx: FileIndex)	
isDirty	modulegraphs.html#isDirty,ModuleGraph,PSym	modulegraphs: isDirty(g: ModuleGraph; m: PSym): bool	
